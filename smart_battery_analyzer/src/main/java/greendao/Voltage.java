package greendao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.

import com.ctek.sba.bluetooth.CTEK;
import com.ctek.sba.bluetooth.DeviceUpdateInfo;
import com.ctek.sba.rest.CSensor;

import java.util.Comparator;

/**
 * Entity mapped to table VOLTAGE.
 */
public class Voltage {

    private Long id;
    private Long timestamp;
    private Double value;
    private long deviceId;
    private Double temperature;

    public Voltage() {
    }

    public Voltage(Long id) {
        this.id = id;
    }

    public Voltage(Long id, Long timestamp, Double value, long deviceId, Double temperature) {
        this.id = id;
        this.timestamp = timestamp;
        this.value = value;
        this.deviceId = deviceId;
        this.temperature = temperature;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(Long timestamp) {
        this.timestamp = timestamp;
    }

    public Double getValue() {
      return value;
    }
    public Double getTemperature() { return temperature; }

    public void setValue(Double value) {
        this.value = value;
    }
    public void setTemperature(Double value) {
    this.temperature = value;
  }

    public long getDeviceId() {
        return deviceId;
    }

    public void setDeviceId(long deviceId) {
        this.deviceId = deviceId;
    }

  @Override
  public String toString() {
    return "[" +
        "V = " + value + " T = " + temperature +
        ", " + timestamp + " - " + CSensor.getMillisFormatted(timestamp) +
        ']';
  }

  public static Comparator<Voltage> compareByTimestamp = new Comparator<Voltage>() {
    public int compare(Voltage v1, Voltage v2) {
      Long timestamp1 = v1.getTimestamp();
      Long timestamp2 = v2.getTimestamp();

      long msecs1 = (timestamp1!=null) ? timestamp1 : 0;
      long msecs2 = (timestamp2!=null) ? timestamp2 : 0;
      if (msecs1 < msecs2) return -1;
      if (msecs1 > msecs2) return +1;
      return 0;
    }
  };

}
